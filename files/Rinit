#!/usr/bin/env Rscript
library(lawstat)

smart.mean <- function(x) {
	if(is.numeric(x))
		mean(x, na.rm=T)
	else
		x[1]
}

get.outname <- function(in.args) {
	nb.indexes = length(in.args)
	range.indexes = 1:nb.indexes
	initial.options = rbind(range.indexes, in.args)
	find.index = initial.options[1, initial.options[2,] == "-f"]
	script.filename = initial.options[2, as.numeric(find.index[[1]])+1]
	script.filename = basename(script.filename[[1]])
	script.filename = gsub("\\.r",".csv",script.filename)
	script.filename
}
set.df <- function(string, df) {
	df = round(df, digits = 1)
	gsub("<df>", as.character(df), string)
}

set.chi <- function(string, chi) {
	chi = round(chi, digits = 1)
	gsub("<chi>", as.character(chi), string)
}

set.p <- function(string, p) {
	if(p < 0.001) {
		gsub("= <p>", "\\\\ll 0.05", string)
	} else {
		p = round(p, digits = 3)
		gsub("<p>", as.character(p), string);
	}
}

friedman2tex <- function(friedman) {
	string = "$\\chi^2 = <chi>$, $\\mathrm{df} = <df>$, $p = <p>$%"
	string = set.df(string, friedman$parameter)
	string = set.chi(string, friedman$statistic)
	string = set.p(string, friedman$p.value)
	string
}

kruskal2tex <- function(kruskal) {
	string = "$\\chi^2 = <chi>$, $\\mathrm{df} = <df>$, $p = <p>$%"
	string = set.df(string, kruskal$parameter)
	string = set.chi(string, kruskal$statistic)
	string = set.p(string, kruskal$p.value)
	string
}

dat.exp1 = read.table("exp1.csv", h=T)
# David was not counter-balanced in binome
dat.exp1 = dat.exp1[dat.exp1$id != "David", ]
