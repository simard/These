#!/usr/bin/env Rscript
library(lawstat)

standard.deviation <- function(x) {
	sqrt(var(x, na.rm = TRUE))
}

global.summary <- function(x) {
	m = mean(x, na.rm = TRUE)
	v = var(x, na.rm = TRUE)
	s = standard.deviation(x)
	data.frame(mean=m, variance=v, standard.deviation=s)
}

boxplot.filter <- function(values, patterns) {
	temp = values
	for(val in patterns) {
		temp = replace(temp, temp==val, NA)
	}
	temp
}

smart.mean <- function(x) {
	if(is.numeric(x))
		mean(x, na.rm=T)
	else
		x[1]
}

get.outname <- function(in.args) {
	nb.indexes = length(in.args)
	range.indexes = 1:nb.indexes
	initial.options = rbind(range.indexes, in.args)
	find.index = initial.options[1, initial.options[2,] == "-f"]
	script.filename = initial.options[2, as.numeric(find.index[[1]])+1]
	script.filename = basename(script.filename[[1]])
	script.filename = gsub("\\.r",".csv",script.filename)
	script.filename
}
set.df <- function(string, df) {
	df = round(df, digits = 1)
	gsub("<df>", as.character(df), string)
}

set.chi <- function(string, chi) {
	chi = round(chi, digits = 1)
	gsub("<chi>", as.character(chi), string)
}

set.p <- function(string, p) {
	if(p < 0.001) {
		string = gsub("p = ", "p \\\\ll ", string)
		gsub("<p>", "0.05", string)
	} else {
		p = round(p, digits = 3)
		gsub("<p>", as.character(p), string);
	}
}

set.mu <- function(string, mu) {
	mu = round(mu, digits=1)
	gsub("<mu>", as.character(mu), string)
}

set.sigma <- function(string, sigma) {
	sigma = round(sigma, digits=1)
	gsub("<sigma>", as.character(sigma), string)
}

friedman2tex <- function(friedman) {
	string = "$\\chi^2 = \\mynum{<chi>}$, $df = \\mynum{<df>}$, $p = \\mynum{<p>}$%"
	string = set.df(string, friedman$parameter)
	string = set.chi(string, friedman$statistic)
	string = set.p(string, friedman$p.value)
	string
}

kruskal2tex <- function(kruskal) {
	string = "$\\chi^2 = \\mynum{<chi>}$, $df = \\mynum{<df>}$, $p = \\mynum{<p>}$%"
	string = set.df(string, kruskal$parameter)
	string = set.chi(string, kruskal$statistic)
	string = set.p(string, kruskal$p.value)
	string
}

summary2tex <- function(summary) {
	string = "$\\mu = \\mynum{<mu>}$, $\\sigma = \\mynum{<sigma>}$%"
	string = set.mu(string, summary$mean)
	string = set.sigma(string, summary$standard.deviation)
	string
}

set.subjects <- function(string, s) {
	string = gsub("<s>", as.character(s), string)
	if(s > 1)
		gsub("<splural>", "s", string)
	else
		gsub("<splural>", "", string)
}

set.female <- function(string, f) {
	string = gsub("<f>", as.character(f), string)
	if(f > 1)
		gsub("<fplural>", "s", string)
	else
		gsub("<fplural>", "", string)
}

set.male <- function(string, m) {
	string = gsub("<m>", as.character(m), string)
	if(m > 1)
		gsub("<mplural>", "s", string)
	else
		gsub("<mplural>", "", string)
}

subjectssummary2tex <- function(summary) {
	string = "\\mynum{<s>}~sujet<splural> (\\mynum{<f>}~femme<fplural> et \\mynum{<m>}~homme<mplural>)%"
	string = set.subjects(string, summary["f"][[1]]+summary["m"][[1]])
	string = set.female(string, summary["f"][[1]])
	string = set.male(string, summary["m"][[1]])
	string
}

mean2tex <- function(m) {
	string = "\\mynum{<m>}%"
	m = round(m, digits=1)
	string = gsub("<m>", as.character(m), string)
	string
}

ratio2tex <- function(ratio) {
	string = "\\mynum[\\%]{<ratio>}%"
	ratio = round(100 * ratio, digits=1)
	string = gsub("<ratio>", as.character(ratio), string)
	string
}

dat.exp1 = read.table("exp1.csv", h=T)
# David was not counter-balanced in binome
dat.exp1 = dat.exp1[dat.exp1$id != "David", ]

dat.exp2 = read.table("exp2.csv", h=T)
# Prion was the training molecule
dat.exp2 = dat.exp2[dat.exp2$molecule != "prion", ]
# Alanine was removed from the final data
dat.exp2 = dat.exp2[dat.exp2$molecule != "alanine", ]
# GUÃ‰NIAT Florimond and WU Han did not achieved the total experimentation
dat.exp2 = dat.exp2[dat.exp2$id != "FlorimondHan", ]
dat.exp2 = dat.exp2[dat.exp2$id != "Florimond", ]
dat.exp2 = dat.exp2[dat.exp2$id != "Han", ]
# FLORENT Charly and DEBOIN Sybil did not achieved the total experimentation
dat.exp2 = dat.exp2[dat.exp2$id != "CharlySybil", ]
dat.exp2 = dat.exp2[dat.exp2$id != "Charly", ]
dat.exp2 = dat.exp2[dat.exp2$id != "Sybil", ]
# JIBOUDAUD Benjamin and DUBOIS Mathieu did not achieved the total 
# experimentation
dat.exp2 = dat.exp2[dat.exp2$id != "BenjaminMathieu", ]
dat.exp2 = dat.exp2[dat.exp2$id != "Benjamin", ]
dat.exp2 = dat.exp2[dat.exp2$id != "Mathieu", ]

dat.exp3 = read.table("exp3.csv", h=T)
# TRP-Cage was the training molecule
dat.exp3 = dat.exp3[dat.exp3$molecule != "trp-cage", ]
dat.exp3$molecule = factor(dat.exp3$molecule)
